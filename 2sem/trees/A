class Node:

    def __init__(self, data):

        self.data = data

        self.left = None

        self.right = None

        self.parent=None



class Tree:

    def __init__(self):

        self.root = None



    def find(self,data):

        p=self.root

        while p is not None and p.data!=data:

            if data>p.data:

                p=p.right

            else:

                p=p.left

        return p

    

    def insert(self,data):

        p=self.find(data)

        if p is not None:

            return

        node=Node(data)

        if self.root is None:

            self.root=node

            return

        p=self.root

        while True:

            if data<p.data:

                if p.left is None:

                    p.left=node

                    node.parent=p

                    break

                else:

                    p=p.left

            else:

                if p.right is None:

                    p.right=node

                    node.parent=p

                    break

                else:

                    p=p.right

    

    def add(self,data):

        if self.root is None:

            self.root=Node(data)

        else:

            self.insert(data)



    def print(self,p='first'):   #можно распечатать отдельное поддерево

        if p=='first':

            p=self.root

        if p is None:

            return

        if p.left is not None:

            self.print(p.left)

        print(p.data, end=' ')

        if p.right is not None:

            self.print(p.right)
